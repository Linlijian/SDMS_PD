@using FluentBootstrap
@using WEBAPP.Helper
@using DataAccess.SEC
@using UtilityLib

@model SECS01P004Model

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_LayoutChildPage.cshtml";
}

@using (var form = Html.Bootstrap().Form().SetId("form1").SetHorizontal().Begin())
{
    @Html.AntiForgeryToken()
    using (var row = Html.Bootstrap().GridRow().Begin())
    {
        using (row.GridColumn(12).SetXs(12).Begin())
        {
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (r.GridColumn(6).Begin())
                {
                    @form.InputFor(m => m.SYS_CODE, isRequired: true)
                }
                using (r.GridColumn(6).Begin())
                {
                }
            }
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (r.GridColumn(6).Begin())
                {
                    @form.InputNumberFor(m => m.SYS_NO).SetReadonly()
                }
                using (r.GridColumn(6).Begin())
                {
                    @form.InputNumberFor(m => m.SYS_SEQ)
                }
            }
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (r.GridColumn(6).Begin())
                {
                    @form.TextAreaFor(m => m.SYS_NAME_TH, rows: 2, isRequired: true)
                }
                using (r.GridColumn(6).Begin())
                {
                    @form.TextAreaFor(m => m.SYS_NAME_EN, rows: 2, isRequired: true)
                }
            }
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (r.GridColumn(6).Begin())
                {
                    @form.SelectFor(t => t.SYS_STATUS, Model.SYS_STATUS_MODEL.ToSelectList("Value", "Text"), isRequired: true)
                }
            }
        }
    }
}

@section modals{

}
@section Scripts {
<script type="text/javascript">
            const onPressOnly = (event, regex) => {
                var eventCode = event.which;
                if ((eventCode >= 37 && eventCode <= 40) || eventCode == 8 || eventCode == 9 || eventCode == 46) { // Left  / Right Arrow, Backspace, Delete keys
                    return;
                }
                if (regex.test(event.key) === false) {
                    event.preventDefault()
                    return false;
                }
            }
            // TH
            $(document).ready(function () {
                $("#SYS_NAME_TH").on("keydown", (event) => {
                    return onPressOnly(event, /^[ก-๛]+$/)
                });
            });

            // END TH


            // ENG
            $(document).ready(function () {
                $("#SYS_NAME_EN").on("keydown", (event) => {
                    return onPressOnly(event, /^[A-Za-z]+$/)
                });
            });

            //END ENG
</script>
}

