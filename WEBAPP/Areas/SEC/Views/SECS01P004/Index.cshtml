@using FluentBootstrap
@using WEBAPP.Helper
@using DataAccess.SEC
@using UtilityLib

@model SECS01P004Model

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
@using (var form = Html.Bootstrap().Form().SetId("form1").SetHorizontal().Begin())
{
    @form.ValidationSummary(true).AddCss(Css.Hidden)
    @Html.AntiForgeryToken()
    using (var rowInfo = Html.Bootstrap().GridRow().Begin())
    {
        using (rowInfo.GridColumn(12).SetXs(12).Begin())
        {
            using (var row1 = Html.Bootstrap().GridRow().Begin())
            {
                using (row1.GridColumn(6).Begin())
                {
                    @form.InputFor(m=>m.SYS_CODE)
                }
                using (row1.GridColumn(6).Begin())
                {
                    @form.InputNumberFor(m => m.SYS_SEQ)
                }
            }
            using (var row1 = Html.Bootstrap().GridRow().Begin())
            {
                using (row1.GridColumn(6).Begin())
                {
                    @form.InputFor(m => m.SYS_NAME_TH)
                }
                using (row1.GridColumn(6).Begin())
                {
                    @form.InputFor(m => m.SYS_NAME_EN)
                }
            }
            using (var row1 = Html.Bootstrap().GridRow().Begin())
            {
                using (row1.GridColumn(6).Begin())
                {
                    @form.SelectFor(t => t.SYS_STATUS, Model.SYS_STATUS_MODEL.ToSelectList("Value", "Text", Model.SYS_STATUS), IsSearch: true)
                }
            }
        }
    }
}
@using (var row = Html.Bootstrap().GridRow().SetId("rowGridSearch").SetVisibility(Visibility.Hidden).Begin())
{
    using (row.GridColumn(12).Begin())
    {
        @Html.Bootstrap().Table().SetId("GridSearch").SetStyle(TableStyle.TableStripedBorderedHover)
    }
}

@section scripts{
    @Html.GridScript("Search",
        new GridConfig
        {
            GetConfig = new DefaultConfig(Url.Action("Search")),
            DeleteConfig = new DefaultConfig(Url.Action("DeleteSearch")),
            DefaultBinding = Model.IsDefaultSearch,
            ScrollX = false,
            WidthType = ColumnsWidthType.Percentage
        },
        Html.GridColumnCommand(Html.GridCommand(StandardButtonName.Edit, Translation.CenterLang.Center.Edit, Url.Action(StandardButtonName.Edit), FaIcons.FaPencil, TextColor.orange2, new VSMParameter("SYS_CODE"))),
        new GridColumn("SYS_CODE").SetNotVisible().SetKey(),
        new GridColumn("SYS_CODE", Translation.SEC.SECS01P004.SYS_CODE, 10),
        new GridColumn("SYS_SEQ", Translation.SEC.SECS01P004.SYS_SEQ, 5, ColumnsTextAlign.Right),
        new GridColumn("SYS_NAME_TH", Translation.SEC.SECS01P004.SYS_NAME_TH, 20),
        new GridColumn("SYS_NAME_EN", Translation.SEC.SECS01P004.SYS_NAME_EN, 20),
        new GridColumn("SYS_STATUS", Translation.SEC.SECS01P004.SYS_STATUS, 5, align: ColumnsTextAlign.Center, render: "getStatus")

        )

    <script>
        function getStatus(data) {
            if (data != null) {
                if (data == 'N') {
                    return '<label>Active</label>';
                }
                else {
                    return '<label>Non-Active</label>';
                }
            }
            return '<label></label>';
        }
    </script>
}