@using FluentBootstrap
@using WEBAPP.Helper
@using DataAccess.MIS
@using UtilityLib

@model MISS01P001Model

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_LayoutChildPage.cshtml";
}

@using (var form = Html.Bootstrap().Form().SetId("form1").SetHorizontal().Begin())
{
    @Html.AntiForgeryToken()
    using (Html.Bootstrap().Div().SetId("REFNO").SetVisibility(Visibility.Hidden).Begin())
    {
        @Html.GetVSMWidgetsBegin(Translation.MIS.MISS01P001.REF_NO_CRITERIA)
        using (var row = Html.Bootstrap().GridRow().Begin())
        {
            using (row.GridColumn(12).SetXs(12).Begin())
            {
                using (var r = Html.Bootstrap().GridRow().Begin())
                {
                    using (row.GridColumn(6).Begin())
                    {
                       @form.InputJAutocompleteFor(t => t.REF_NO).JAutoKeySource("AC_REF_NO").JAutoBindField("REF_NO").JAutoSetExtraParamsByCtrl("APP_CODE,NO").JAutoFieldToInput(new
                  {
                      ISSUE_BY = "ISSUE_BY"
                  }
                          ).SetSelectOnly()
                    }
                }
            }
        }
        @Html.GetVSMWidgetsEnd()
    }
    @Html.GetVSMWidgetsBegin(Translation.MIS.MISS01P001.ISSUE_CALCULATE)
    using (var row1 = Html.Bootstrap().GridRow().Begin())
    {
        using (row1.GridColumn(12).SetXs(12).Begin())
        {
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (row1.GridColumn(6).Begin())
                {
                    @form.SelectFor(t => t.APP_CODE, Model.APP_CODE_MODEL.ToSelectList("Value", "Text", Model.APP_CODE), isRequired: true, addValidateMessage: true)
                }
                using (row1.GridColumn(6).Begin())
                {
                    <div class="form-group">
                        <label for="@Translation.MIS.MISS01P001.ID_NO" class="control-label col-md-4">@Translation.MIS.MISS01P001.NO :</label>
                        <div class="col-md-8">
                            <label for="@Translation.MIS.MISS01P001.ID_NO" id="@Translation.MIS.MISS01P001.ID_NO" class="control-label"></label>
                        </div>
                    </div>
                }
            }
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (row1.GridColumn(6).Begin())
                {
                    @form.InputFor(m => m.STR_ISSUE_DATE, isRequired: true, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.ISSUE_DATE).AddCss("input-append")
                    @form.HiddenFor(m => m.ISSUE_DATE)
                }
                using (row1.GridColumn(6).Begin())
                {
                    <div class="form-group">
                        <label for="@Translation.MIS.MISS01P001.ID_ISSUE_DATE_PERIOD" class="control-label col-md-4">@Translation.MIS.MISS01P001.ISSUE_DATE_PERIOD :</label>
                        <div class="col-md-8">
                            <label for="@Translation.MIS.MISS01P001.ID_ISSUE_DATE_PERIOD" id="@Translation.MIS.MISS01P001.ID_ISSUE_DATE_PERIOD" class="control-label"></label>
                        </div>
                    </div>
                }
            }
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (row1.GridColumn(6).Begin())
                {
                    @form.InputFor(m => m.ISSUE_BY, isRequired: true, addValidateMessage: true)
                }
                using (row1.GridColumn(6).Begin())
                {
                    @form.SelectFor(t => t.ISSUE_TYPE, Model.ISSUE_TYPE_MODEL.ToSelectList("Value", "Text", Model.ISSUE_TYPE), isRequired: true, addValidateMessage: true)
                }
            }
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (row1.GridColumn(6).Begin())
                {
                    @form.TextAreaFor(m => m.MODULE, 4, isRequired: true)
                    @form.HiddenFor(m => m.APP_CODE)
                }
                using (row1.GridColumn(6).Begin())
                {
                    @form.SelectFor(t => t.RESPONSE_BY, Model.RESPONSE_BY_MODEL.ToSelectList("Value", "Text", Model.RESPONSE_BY), isRequired: true, addValidateMessage: true)
                }
            }
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (row1.GridColumn(6).Begin())
                {
                    @form.InputNumberFor(m => m.ESSR_NO)
                }
                using (row1.GridColumn(6).Begin())
                {
                    @form.InputFor(m => m.STR_RESPONSE_DATE, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.RESPONSE_DATE).AddCss("input-append")
                    @form.HiddenFor(m => m.RESPONSE_DATE)
                }

            }
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (row1.GridColumn(6).Begin())
                {
                    @form.TextAreaFor(m => m.ROOT_CAUSE, 4)
                }
                using (row1.GridColumn(6).Begin())
                {
                    @form.TextAreaFor(m => m.SOLUTION, 4)
                }
            }
            using (var r = Html.Bootstrap().GridRow().Begin())
            {
                using (row1.GridColumn(6).Begin())
                {
                    @form.TextAreaFor(m => m.EFFECTS, 4)
                }
                using (row1.GridColumn(6).Begin())
                {
                    @form.TextAreaFor(m => m.DETAIL, 4, isRequired: true)
                }
            }
            @*@Html.GetVSMWidgetsEnd()
                using (var r = Html.Bootstrap().GridRow().Begin())
                {
                    using (row1.GridColumn(6).Begin())
                    {
                        @Html.GetVSMWidgetsBegin(Translation.MIS.MISS01P001.ISSUE_PROPERTY)
                        using (row1.GridColumn(12).Begin())
                        {
                            //autocomplete
                            @form.InputJAutocompleteFor(t => t.PRIORITY, isRequired: true, addValidateMessage: true).JAutoKeySource("AC_MISS01P001_003").JAutoBindField("PRIORITY").JAutoSetExtraParamsByCtrl("APP_CODE").JAutoFieldToInput(new
                       {
                           RESPONSE_TARGET = "RESPONSE_TARGET",
                           RESOLUTION_TARGET = "RESOLUTION_TARGET"
                       }).SetSelectOnly().IsDisabled()
                            //@form.SelectFor(t => t.PRIORITY, Model.PRIORITY_MODEL.ToSelectList("Value", "Text", Model.PRIORITY), isRequired: true)

                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            // @form.SelectFor(t => t.ISSUE_TYPE, Model.ISSUE_TYPE_MODEL.ToSelectList("Value", "Text", Model.ISSUE_TYPE), isRequired: true, addValidateMessage: true)
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputFor(m => m.RESPONSE_TARGET).SetReadonly()
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputFor(m => m.RESOLUTION_TARGET).SetReadonly()
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputJAutocompleteFor(t => t.DEFECT, isRequired: true, addValidateMessage: true).JAutoKeySource("AC_MISS01P001_002").JAutoBindField("ISSUE_TYPE").JAutoSetExtraParamsByCtrl("APP_CODE").JAutoFieldToInput(new
                       {
                           MAN_PLM_SA = "MAN_PLM_SA",
                           MAN_PLM_QA = "MAN_PLM_QA",
                           MAN_PLM_PRG = "MAN_PLM_PRG"
                       }).SetSelectOnly().IsDisabled()
                            // @form.SelectFor(t => t.DEFECT, Model.DEFECT_MODEL.ToSelectList("Value", "Text", Model.DEFECT), isRequired: true)
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputNumberFor(m => m.MAN_PLM_SA, digits: 1, addValidateMessage: true).SetReadonly()
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputNumberFor(m => m.MAN_PLM_QA, digits: 1, addValidateMessage: true).SetReadonly()
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputNumberFor(m => m.MAN_PLM_PRG, digits: 1, addValidateMessage: true).SetReadonly()
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputNumberFor(m => m.MAN_PLM_PL, digits: 1, addValidateMessage: true).SetReadonly()
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputNumberFor(m => m.MAN_PLM_DBA, digits: 1, addValidateMessage: true).SetReadonly()
                        }
                        @Html.GetVSMWidgetsEnd()
                    }
                    using (row1.GridColumn(6).Begin())
                    {
                        @Html.GetVSMWidgetsBegin(Translation.MIS.MISS01P001.ISSUE_DATETIME)
                        using (row1.GridColumn(12).Begin())
                        {
                            //@form.InputFor(m => m.STATUS)
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputFor(m => m.STR_TARGET_DATE, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.TARGET_DATE).AddCss("input-append")
                            @form.HiddenFor(m => m.TARGET_DATE)
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputFor(m => m.STR_CLOSE_DATE, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.CLOSE_DATE).AddCss("input-append").SetReadonly()
                            @form.HiddenFor(m => m.CLOSE_DATE)
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputFor(m => m.STR_RDEPLOY_PD, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.DEPLOY_PD).AddCss("input-append").SetReadonly()
                            @form.HiddenFor(m => m.DEPLOY_PD)
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.InputFor(m => m.STR_DEPLOY_QA, addValidateMessage: true).SetControlLabel(Translation.MIS.MISS01P001.DEPLOY_QA).AddCss("input-append").SetReadonly()
                            @form.HiddenFor(m => m.DEPLOY_QA)
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            // @form.TextAreaFor(m => m.FILE_ID, 2)
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            //@form.InputFileuploadFor(m => m.ISSUE_IMG, allowExt: "jpg,png")
                        }
                        using (row1.GridColumn(12).Begin())
                        {
                            @form.TextAreaFor(m => m.REMARK, 4)
                        }
                        @*using (row1.GridColumn(12).Begin())
                            {
                                <div class="input-append date form_datetime">
                                    <label>aaaa</label>
                                    <input name="A" id="A" size="16" type="datetime" value="" readonly>
                                    <span class="add-on"><i class="icon-th"></i></span>
                                </div>
                            }*@
            @form.HiddenFor(a => a.MAN_PLM_DBA)
            @form.HiddenFor(a => a.MAN_PLM_PL)
            @form.HiddenFor(a => a.MAN_PLM_PRG)
            @form.HiddenFor(a => a.MAN_PLM_QA)
            @form.HiddenFor(a => a.MAN_PLM_SA)
            @form.HiddenFor(a => a.NO)
            @form.HiddenFor(a => a.ISSUE_DATE_PERIOD)
            @Html.GetVSMWidgetsEnd()
        }

    }
}

@section Scripts {

    <script type="text/javascript"
            src="@Url.Content("~/Scripts/master-datetimepicker.min.js")">
    </script>
    <script>

        $(document).ready(function () {
            $("#APP_CODE").change(function (e) {
                $("#ISSUE_TYPE").BindSelect({
                    Url: '@Url.Action("BindIssueType")',
                    Parameters: [{
                        type: 'ControlId',//ControlId,FixValue
                        name: 'APP_CODE',
                        value: 'APP_CODE'
                    }]
                });
            });
        })

        $(document).ready(function () {
            $("#APP_CODE").change(function (e) {
                $("#RESPONSE_BY").BindSelect({
                    Url: '@Url.Action("BindResponseBy")',
                    Parameters: [{
                        type: 'ControlId',//ControlId,FixValue
                        name: 'APP_CODE',
                        value: 'APP_CODE'
                    }]
                });
            });
        })

        $(document).ready(function () {
            //=========================CLOSE_DATE============================//
            $("#STR_CLOSE_DATE").JDatepicker();
            $("#STR_CLOSE_DATE").datetimepicker({
                format: "dd/mm/yyyy hh:ii:ss",
                showmeridian: true,
                autoclose: true,
                todaybtn: true,
                todayBtn: 1,
            });

            $("#STR_CLOSE_DATE").change(function () {
                $('#CLOSE_DATE').val($('#STR_CLOSE_DATE').val())
            })
            //=========================TARGET_DATE============================//
            $("#STR_TARGET_DATE").JDatepicker();
            $("#STR_TARGET_DATE").datetimepicker({
                format: "dd/mm/yyyy hh:ii:ss",
                showmeridian: true,
                autoclose: true,
                todaybtn: true,
                todayBtn: 1,
            });

            $("#STR_TARGET_DATE").change(function () {
                $('#TARGET_DATE').val($('#STR_CLOSE_DATE').val())
            })
            //=========================DEPLOY_PD============================//
            $("#STR_DEPLOY_QA").JDatepicker();
            $("#STR_DEPLOY_QA").datetimepicker({
                format: "dd/mm/yyyy hh:ii:ss",
                showmeridian: true,
                autoclose: true,
                todaybtn: true,
                todayBtn: 1,
            });

            $("#STR_DEPLOY_QA").change(function () {
                $('#DEPLOY_PD').val($('#STR_CLOSE_DATE').val())
            })
            //=========================DEPLOY_QA============================//
            $("#STR_RDEPLOY_PD").JDatepicker();
            $("#STR_RDEPLOY_PD").datetimepicker({
                format: "dd/mm/yyyy hh:ii:ss",
                showmeridian: true,
                autoclose: true,
                todaybtn: true,
                todayBtn: 1,
            });

            $("#STR_RDEPLOY_PD").change(function () {
                $('#DEPLOY_QA').val($('#STR_CLOSE_DATE').val())
            })
            //=========================RESPONSE_DATE============================//
            $("#STR_RESPONSE_DATE").JDatepicker();
            $("#STR_RESPONSE_DATE").datetimepicker({
                format: "dd/mm/yyyy hh:ii:ss",
                showmeridian: true,
                autoclose: true,
                todaybtn: true,
                todayBtn: 1,
            });

            $("#STR_RESPONSE_DATE").change(function () {
                $('#RESPONSE_DATE').val($('#STR_CLOSE_DATE').val())
            })
            //=========================ISSUE_DATE============================//
            $("#STR_ISSUE_DATE").JDatepicker();
            $("#STR_ISSUE_DATE").datetimepicker({
                format: "dd/mm/yyyy hh:ii:ss",
                showmeridian: true,
                autoclose: true,
                todaybtn: true,
                todayBtn: 1
            });
            //.on('changeDate', function (ev) {
            //    $('#STR_RESPONSE_DATE').datetimepicker('setStartDate', $("#STR_ISSUE_DATE").val())});

            $("#STR_ISSUE_DATE").change(function () {
                $('#ISSUE_DATE').val($('#STR_ISSUE_DATE').val())
            })
            //=========================END============================//

            //set ISSUE_DATE
            $("#STR_ISSUE_DATE").change(function () {
                var date = $("#STR_ISSUE_DATE").val()
                var arr = date.split('/');
                var year = arr[2].split(' ')
                $("#ISSUE_DATE_PERIOD").val(year[0] + '-' + arr[1])
                $("#ID_ISSUE_DATE_PERIOD").text(year[0] + '-' + arr[1])
            })

            $("#STR_ISSUE_DATE").BetweenDateTime({
                from_ctrl: 'STR_ISSUE_DATE',
                to_ctrl: 'STR_RESPONSE_DATE',
            });

            $("#STR_TARGET_DATE").BetweenDateTime({
                from_ctrl: 'STR_RESPONSE_DATE',
                to_ctrl: 'STR_TARGET_DATE',
            });

            $("#STR_CLOSE_DATE").BetweenDateTime({
                from_ctrl: 'STR_RESPONSE_DATE',
                to_ctrl: 'STR_CLOSE_DATE',
            });

            $("#STR_RDEPLOY_PD").BetweenDateTime({
                from_ctrl: 'STR_RESPONSE_DATE',
                to_ctrl: 'STR_RDEPLOY_PD',
            });

            $("#STR_DEPLOY_QA").BetweenDateTime({
                from_ctrl: 'STR_RESPONSE_DATE',
                to_ctrl: 'STR_DEPLOY_QA',
            });

            $("#STR_DEPLOY_QA").BetweenDateTime({
                from_ctrl: 'STR_RESPONSE_DATE',
                to_ctrl: 'STR_DEPLOY_QA',
            });

        })

        //=========================DATE BETWEEN============================//
        $.fn.BetweenDateTime = function (options) {
            var val_more = $("[name=" + options.from_ctrl + "]").val();
            var val_less = $("[name=" + options.to_ctrl + "]").val();

            $("[name=" + options.from_ctrl + "]").datetimepicker({
                format: "dd/mm/yyyy hh:ii:ss",
                showmeridian: true,
                autoclose: true,
                todaybtn: true,
                todayBtn: 1
            }).on("hide", function (selected) {
                var val = $(this).val();
                if (val != undefined && val != null && val != "") {
                    $("[name=" + options.to_ctrl + "]").datetimepicker("setStartDate", $.stringToDate(val));
                }
                else {
                    $("[name=" + options.to_ctrl + "]").datetimepicker("setStartDate", -Infinity);
                }
            }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });

            $("[name=" + options.to_ctrl + "]").datetimepicker({
                format: "dd/mm/yyyy hh:ii:ss",
                showmeridian: true,
                autoclose: true,
                todaybtn: true,
                todayBtn: 1
            }).on("hide", function (selected) {
                var val = $(this).val();
                if (val != undefined && val != null && val != "") {
                    $("[name=" + options.from_ctrl + "]").datetimepicker("setEndDate", $.stringToDate(val));
                }
                else {
                    $("[name=" + options.from_ctrl + "]").datetimepicker("setEndDate", Infinity);
                }
            }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });
        };
        //=========================END============================//

        //=========================CONTROL GET NO============================//
        $(document).ready(function () {
            $("#APP_CODE").change(function (e) {
                var formData = $("#form1").serializeFormData();
                $.ajax({
                    url: '@Url.Action("GetNo")',
                    type: 'post',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response != null && response != isNullOrEmpty && response.data.NO != null) {
                            if ($("#APP_CODE").val() != '') {
                                $("#NO").val(response.data.NO)
                                $("#ID_NO").text(response.data.NO);
                                //$("#APP_CODE").attr("disabled", true)
                                //OnDisabledFlase()
                            }
                        }
                    },
                    error: OnAjaxError
                });
            });
        });

        @*function OnDisabledTrue() {
            $("#ISSUE_BY").attr("disabled", true)
            $("#ISSUE_TYPE").attr("disabled", true)
            $("#STR_ISSUE_DATE").attr("disabled", true)
            $("#MODULE").attr("disabled", true)
            $("#STR_RESPONSE_DATE").attr("disabled", true)
        }

        function OnDisabledFlase() {
            $("#ISSUE_TYPE").removeAttr("disabled", true)
            $("#STR_ISSUE_DATE").removeAttr("disabled", true)
            $("#MODULE").removeAttr("disabled", true)
            $("#STR_RESPONSE_DATE").removeAttr("disabled", true)
        }

        $(document).ready(function () {
            $("#NO").attr("placeholder", "Waitting Application Typing. . .")
            OnDisabledTrue()

            $("#APP_CODE").on('change', function () {
                $("#NO").attr("placeholder", "Waitting  Issue By Typing. . .")
                $("#ISSUE_BY").removeAttr("disabled", true)
                //OnCallAjax()
            })

            $("#ISSUE_BY").on('change', function () {
                var formData = $("#form1").serializeFormData();
                $.ajax({
                    url: '@Url.Action("GetNo")',
                    type: 'post',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response != null && response != isNullOrEmpty && response.data.NO != null) {
                            if ($("#APP_CODE").val() != '') {
                                $("#NO").val(response.data.NO)
                                $("#APP_CODE").attr("disabled", true)
                                OnDisabledFlase()
                            } else {
                                $("#NO").attr("placeholder", "Application Typing Again...")
                            }
                        }
                        else {
                            $("#NO").attr("placeholder", "Check Application Typing. . .")
                        }
                    },
                    error: OnAjaxError
                });
            })
        })*@
        //=========================END============================//
        //=========================GET REF_NO============================//
        $("#GetRefNo").click(function () {
            // waitingDialog.show();
            $("#notification").hide()
            var app = $("#APP_CODE").val()

            if (app != undefined && app != null && app != "") {
                $("#REFNO").removeClass("@Css.Hidden")
            } else {
                var content = '<div class="alert alert-' + 'danger' + ' alert-dismissable alert-' + 'danger' + 'new"><button type="button" class="close" data-dismiss="alert"><i class="ace-icon fa fa-times"></i></button><h2>';
                content += '<i class="ace-icon fa fa-exclamation-triangle bigger-130"></i> ';
                content += 'Select Application First!' + '</h2>';
                content += '</div>';

                $("#notification").html(content).fadeTo(2000, 500);
            }


            @*$.ajax({
                url: '@Url.Action("GetRefNo")',
                type: 'post',
                success: function (result) {
                    if (result.data != undefined || result.data != null) {
                        if (result.data.ERROR_CODE == '0') {
                            $("#REF_NO").val(result.data.REF_NO);
                            $("#PERIOD_FROM").val(jsonDateToFormat(result.data.PERIOD_FROM));
                            $("#PERIOD_TO").val(jsonDateToFormat(result.data.PERIOD_TO));
                        }
                        else {
                            var content = '<div class="alert alert-' + 'danger' + ' alert-dismissable alert-' + 'danger' + 'new"><button type="button" class="close" data-dismiss="alert"><i class="ace-icon fa fa-times"></i></button><h2>';
                            content += '<i class="ace-icon fa fa-exclamation-triangle bigger-130"></i> ';
                            content += 'Get Period Incomplete' + '</h2>';
                            content += '</div>';

                            $("#notification").html(content).fadeTo(2000, 500);
                        }
                    }
                    waitingDialog.hide();
                },
                error: OnAjaxError
            });*@
        });
        //=========================END============================//
    </script>

}

@section stylesheet{
    <link href="@Url.Content("~/Content/master-datetimepicker.min.css")" rel="stylesheet" />

}
