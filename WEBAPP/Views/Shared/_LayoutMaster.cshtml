@using WEBAPP.Helper
@using UtilityLib
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/bundlesContent/css")
    @Scripts.Render("~/bundles/modernizr")

    <!-- ace styles -->
    @Styles.Render("~/bundlesContent/template")
    <!--[if lte IE 9]>
    @Styles.Render("~/bundlesContent/templateIE9")
        <![endif]-->
    <!-- ace settings handler -->
    @Scripts.Render("~/bundles/templateSetting")

    <!--[if lte IE 8]>
        @Scripts.Render("~/bundles/IE8")
    <![endif]-->

    @Styles.Render("~/bundlesContent/plugin")
    @Styles.Render("~/bundlesContent/DataTables")
    @Styles.Render("~/bundlesContent/Custom")
    <!-- page specific plugin styles -->
    @RenderSection("stylesheet", required: false)

    <!--[if !IE]> -->
    @Scripts.Render("~/bundles/jquery")
    <!-- <![endif]-->
    <!--[if IE]>
    @Scripts.Render("~/bundles/jqueryIE")
    <![endif]-->
    @Scripts.Render("~/bundles/waiting")

    <script type="text/javascript">
        $(function () {
            waitingDialog.show("", {
                headerText: false,
                backdrop: false,
                hideConten: true
            });
        });
    </script>
</head>
<body class="no-skin">
    @{
        Html.RenderPartial("_LayoutHeader");
    }
    <div class="main-container" id="main-container">
        <script type="text/javascript">
            try { ace.settings.check('main-container', 'fixed') } catch (e) { }
        </script>
        <div id="sidebar" class="sidebar sidebar-fixed responsive">
            <script type="text/javascript">
                try { ace.settings.check('sidebar', 'fixed') } catch (e) { }
            </script>

            <div class="sidebar-shortcuts" id="sidebar-shortcuts">
                @* <div class="sidebar-shortcuts-large" id="sidebar-shortcuts-large">
                        <button class="btn btn-success">
                            <i class="ace-icon fa fa-signal"></i>
                        </button>

                        <button class="btn btn-info">
                            <i class="ace-icon fa fa-pencil"></i>
                        </button>

                        <button class="btn btn-warning">
                            <i class="ace-icon fa fa-users"></i>
                        </button>

                        <button class="btn btn-danger">
                            <i class="ace-icon fa fa-cogs"></i>
                        </button>
                    </div>*@

                @*<div class="sidebar-shortcuts-mini" id="sidebar-shortcuts-mini">
                        <span class="btn btn-success"></span>

                        <span class="btn btn-info"></span>

                        <span class="btn btn-warning"></span>

                        <span class="btn btn-danger"></span>
                    </div>*@
            </div>
            <!-- /.sidebar-shortcuts -->
            @{ Html.RenderPartial("_SiderbarMenu"); }
            <!-- /.nav-list -->

            <div class="sidebar-toggle sidebar-collapse" id="sidebar-collapse">
                <i class="ace-icon fa fa-angle-double-left ace-save-state" data-icon1="ace-icon fa fa-angle-double-left" data-icon2="ace-icon fa fa-angle-double-right"></i>
            </div>

            <script type="text/javascript">
                try { ace.settings.check('sidebar', 'collapsed') } catch (e) { }
            </script>
        </div>

        <div class="main-content">
            <div class="main-content-inner">
                <div class="breadcrumbs breadcrumbs-fixed" id="breadcrumbs">
                    <script type="text/javascript">
                        try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }
                    </script>
                    @{
                        var breadcrumb = TempData.ContainsKey(Breadcrumb.TempDataKey)
                                                           ? (Breadcrumb)TempData[Breadcrumb.TempDataKey]
                                                        : new Breadcrumb();


                        if (!string.IsNullOrEmpty(breadcrumb.ProgramName) && !string.IsNullOrEmpty(breadcrumb.SystemName))
                        {
                            ViewBag.PRG_NAME = breadcrumb.ProgramName;
                            ViewBag.SYS_NAME = breadcrumb.SystemName;
                            ViewBag.PRG_CODE = breadcrumb.PRG_CODE;
                        }

                        Html.RenderPartial("_Breadcrumb");
                    }
                    <!-- /.breadcrumb -->

                    <div class="nav-search" id="nav-search">
                        <span class="label label-info arrowed-in-right arrowed">
                            <i class="ace-icon fa fa-desktop bigger-120"></i>
                            @SessionHelper.SYS_CurrentPRG_CODE.Trim()
                        </span>
                    </div><!-- /.nav-search -->
                </div>
                @{
                    Html.RenderPartial("_StandardButton");
                }
                <div class="page-content">
                    <!-- PAGE CONTENT BEGINS -->
                    <div id="notification" style="display: none;">
                    </div>
                    @RenderBody()
                    @{ Html.RenderPartial("_PrivacyPolicy");
                        Html.RenderPartial("_TermsofService");
                    }
                    @RenderSection("modals", required: false)
                    <!-- PAGE CONTENT ENDS -->
                </div><!-- /.page-content -->
            </div>
        </div><!-- /.main-content -->
        @{
            Html.RenderPartial("_LayoutFooter");
        }
        <a href="#" id="btn-scroll-up" class="btn-scroll-up btn btn-sm btn-inverse">
            <i class="ace-icon fa fa-angle-double-up icon-only bigger-110"></i>
        </a>
        @{
            System.Web.Configuration.CustomErrorsSection customErrorsSection = System.Configuration.ConfigurationManager.GetSection("system.web/customErrors") as System.Web.Configuration.CustomErrorsSection;
        }
        @Html.Hidden("hdSysPageError", customErrorsSection.DefaultRedirect != null ? Url.Content(customErrorsSection.DefaultRedirect) : null)

        @{
            Html.RenderPartial("_LayoutHidden");
        }
    </div><!-- /.main-container -->
    <!-- basic scripts -->

    @Scripts.Render("~/bundles/myProject")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/plugin")

    <!-- ace scripts -->
    @Scripts.Render("~/bundles/template")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/DataTables")
    @Scripts.Render("~/bundles/myCustom")

    <script type="text/javascript">

        var oldie = /msie\s*(8|7|6)/.test(navigator.userAgent.toLowerCase());

        function OnClick_btnPrivacyPolicy(e) {
            $("#mdPrivacyPolicy").modal();

            return false;
        }
        function OnClick_btnTermsofService(e) {
            $("#mdTermsofService").modal();
            return false;
        }

        $(function () {
            $(".autocomplete-input").JAutocomplete({
                url: '@Url.Action("Index", "Autocomplete", new {Area = "Ux"})'
            });

            $('.easy-pie-chart.percentage').each(function () {
                $(this).easyPieChart({
                    barColor: $(this).data('color'),
                    trackColor: '#EEEEEE',
                    scaleColor: false,
                    lineCap: 'butt',
                    lineWidth: 8,
                    animate: oldie ? false : 1000,
                    size: 75
                }).css('color', $(this).data('color'));
            });

            $("ul.pagination").JPager();

            $("#btnPagegoto").on("click", function (e) {
                e.preventDefault();
                var url = $(this).attr("href");
                var pageNo = $("#pager_goto").val();
                if ($.isNumeric(pageNo)) {
                    location = url + "?page=" + pageNo;
                }
            });

        });


        $(document).ready(function () {
            $('#btnPrivacyPolicy').click(OnClick_btnPrivacyPolicy);
            $('#btnTermsofService').click(OnClick_btnTermsofService);
            $(document).ready(function () {
                $("a.menu").click(function () {
                    ifSlowShowLoading();
                });

            });
        });
        $(function () {
            function checkTime(i) {
                return (i < 10) ? "0" + i : i;
            }

            function startTime() {
                var today = new Date(),
                    h = checkTime(today.getHours()),
                    m = checkTime(today.getMinutes()),
                    s = checkTime(today.getSeconds());
                var day = today.getDay();
                var month = today.getMonth();
                var year = today.getFullYear();
                var format = "DD/MM/YYYY HH:mm:ss";
                var dtM = moment(today);
                var dateFormat = dtM.format(format);

                document.getElementById('datetime').innerHTML = dateFormat;
                t = setTimeout(function () {
                    startTime()
                }, 500);
            }
            startTime();
        });
    </script>
    <!-- page specific plugin scripts -->
    @RenderSection("plugin", required: false)
    @RenderSection("scripts", required: false)
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                waitingDialog.hide();
            }, 500);
        });
        
        $(document).ready(function () {
            //remove 0
            if ($('#count-ntf').text() == '0')
                $('#count-ntf').text('')

            //remove count notification
            $('#ntf').click(function () {
                $('#count-ntf').text('')
                //call ajax for change flag = F
                $.ajax({
                    url: '@Url.Action("RemoveCountNTF", "Account", new { Area = "Users"})',
                    type: 'post',
                    success: null,
                    error: OnAjaxError
                });
            });

            //after click notification detail
            $('#a').click(function () {
                //call ajax for change active = T
                //change css after click notification detail
            });

            //call ajax every 5s
            var interval = setInterval(function () {
                $.ajax({
                    url: '@Url.Action("FatchNotification", "Account", new { Area = "Users"})',
                    type: 'post',
                    success: function (resultTimer) {
                        waitingDialog.hide();
                        //remove 0
                        if ($('#count-ntf').text() == '0') {
                            $('#count-ntf').text('')
                        }
                        if (resultTimer.data.NO != 0 || resultTimer.data.NO != "0") {
                            //set count-ntf
                            $("#count-ntf").text(resultTimer.data.NO);
                            //reload item-list
                            $('#item-list').load('@Url.Action("ReloadNotification", "Account", new { Area = "Users"})');
                        }
                    },
                    error: function (request, status, error) {
                    }
                });
            }, 3000);

        });
    </script>
</body>
</html>
